<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="module.xsl"?>
<module>
  <title>MyAgenda</title>
  <author>MyPortico</author>
  <description>
    Preview your Oracle Calendar agenda.
  </description>
  <pref>
    <name>username</name>
    <type>string</type>
    <default></default>
  </pref>
  <pref>
    <name>password</name>
    <type>password</type>
    <default></default>
  </pref>
  <pref>
    <name>ndays</name>
    <type>select</type>
    <option>1</option>
    <option>2</option>
    <option>3</option>
    <option>4</option>
    <option>5</option>
    <option>6</option>
    <option>7</option>
    <default>3</default>
  </pref>
  <pref>
    <name>events</name>
    <type>select</type>
    <multiple>true</multiple>
    <option value="http://127.0.0.1:8080/atomcal/.rdf?h=athletics|Athletics">
      Athletics Events</option>
    <option value="http://127.0.0.1:8080/atomcal/.rdf?h=ovc|OVC">
      OVC Events</option>
    <default></default>
  </pref>
  <attr>
    <name>lastName</name>
    <alias>lastName</alias>
  </attr>
  <attr>
    <name>firstName</name>
    <alias>firstName</alias>
  </attr>
  <content>
    <![CDATA[

    <script type='text/javascript' src='/modules/lib/prototype.js'></script>

    <div id='%MODULE_ID%_calendar_container'
         style='margin-left: 1em; margin-bottom: 1em;'>

      <script>
        var username = '%MODULE_PREF_VALUE_username%';
        var password = '%MODULE_PREF_VALUE_password%';
        var firstLast = username.match(/(\S+)\s+(.+)/);
        var firstName = firstLast[1];
        var lastName = firstLast[2];

        var query = $H({
                   S: lastName,
                   G: firstName,
                 end: '+P%MODULE_PREF_VALUE_ndays%D',
            ocalUser: '?/S='+lastName+'/G='+firstName+'/'
        }).toQueryString();
        var url = "/uPortal/proxy/ocal.html?"+query;
        
        %MODULE_ID%_writeCal('MyAgenda', url);

        var events = "%MODULE_PREF_VALUES_events%".split(", ");
        for (var i = 0; i < events.length; i++) {
          if (events[i].match(/^http/)) {
            var parts = events[i].split("|");
            %MODULE_ID%_writeCal(parts[1], parts[0]);
          }
        }
      </script>

    </div>

    <script>

      // This code was written by Tyler Akins and has been placed in the
      // public domain.  It would be nice if you left this header intact.
      // Base64 code from Tyler Akins -- http://rumkin.com

      var keyStr = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";

      function encode64(input) {
         var output = "";
         var chr1, chr2, chr3;
         var enc1, enc2, enc3, enc4;
         var i = 0;

         do {
            chr1 = input.charCodeAt(i++);
            chr2 = input.charCodeAt(i++);
            chr3 = input.charCodeAt(i++);

            enc1 = chr1 >> 2;
            enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);
            enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);
            enc4 = chr3 & 63;

            if (isNaN(chr2)) {
                enc3 = enc4 = 64;
            } else if (isNaN(chr3)) {
               enc4 = 64;
            }

            output = output + keyStr.charAt(enc1) + keyStr.charAt(enc2) + 
               keyStr.charAt(enc3) + keyStr.charAt(enc4);
         } while (i < input.length);
   
         return output;
      }

      function decode64(input) {
         var output = "";
         var chr1, chr2, chr3;
         var enc1, enc2, enc3, enc4;
         var i = 0;

         // remove all characters that are not A-Z, a-z, 0-9, +, /, or =
         input = input.replace(/[^A-Za-z0-9\+\/\=]/g, "");

         do {
            enc1 = keyStr.indexOf(input.charAt(i++));
            enc2 = keyStr.indexOf(input.charAt(i++));
            enc3 = keyStr.indexOf(input.charAt(i++));
            enc4 = keyStr.indexOf(input.charAt(i++));

            chr1 = (enc1 << 2) | (enc2 >> 4);
            chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);
            chr3 = ((enc3 & 3) << 6) | enc4;

            output = output + String.fromCharCode(chr1);

            if (enc3 != 64) {
               output = output + String.fromCharCode(chr2);
            }
            if (enc4 != 64) {
               output = output + String.fromCharCode(chr3);
            }
         } while (i < input.length);

         return output;
      }

      var %MODULE_ID%_MONTHS = [
        "Jan", "Feb", "Mar", "Apr", "May", "Jun", 
        "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"
      ];

      var %MODULE_ID%_DAYS_OF_WEEK = [
        "Sunday", "Monday", "Tuesday", "Wednesday", 
        "Thursday", "Friday", "Saturday"
      ];

      var %MODULE_ID%_ONE_DAY = 86400000;

      var %MODULE_ID%_TODAY = new Date();
      %MODULE_ID%_TODAY.setHours(0);
      %MODULE_ID%_TODAY.setMinutes(0);
      %MODULE_ID%_TODAY.setSeconds(0);
      %MODULE_ID%_TODAY.setMilliseconds(0);

      function %MODULE_ID%_toICalDateString()
      {
        var year = this.getUTCFullYear();
        var month = this.getUTCMonth() + 1;
        var date = this.getUTCDate();

        return year.toString() +
          (month < 10 ? "0" : "") + month.toString() + 
          (date  < 10 ? "0" : "") + date.toString();
      }     
      
      function %MODULE_ID%_usage()
      {
        document.writeln("<p>");
        document.writeln("Please click 'edit' to enter your username ");
        document.writeln("and password.");
        document.writeln("</p>");
      }

      function %MODULE_ID%_update(r,url,name)
      {
        if (r.readyState == 4) {
          if (r.status == 200) {
            RDF.parseXML(r.responseXML, url);
            RDF.index();
            %MODULE_ID%_display(url,name);
          } else {
            %MODULE_ID%_showError();
          }
        }
      }

      function %MODULE_ID%_display(url,name)
      {
        var d = new Date(%MODULE_ID%_TODAY.getTime());
        var m = new Date(%MODULE_ID%_TODAY.getTime()+%MODULE_ID%_ONE_DAY);
        var ndays = %MODULE_PREF_VALUE_ndays%;
        for (var i = 0; i < ndays; i++) {
          var rstart = %MODULE_ID%_toICalDateString.apply(d);
          var rend   = %MODULE_ID%_toICalDateString.apply(m);
          var results = RDF.runquery({
            select: [ '?dtstart', '?dtend', '?summary' ],
            where: [
              {s: '?ev', p: 'rdf:type', o: 'Vevent',   g: url},
              {s: '?ev', p: 'dtstart',  o: '?dtstart', g: url},
              {s: '?ev', p: 'dtend',    o: '?dtend',   g: url},
              {s: '?ev', p: 'summary',  o: '?summary', g: url}
            ],
            filter: function(r) {
              var dtstart = r.dtstart;
              return rstart <= dtstart && dtstart < rend;
            },
            order: function(r,q) {
              return r.dtstart < q.dtstart ? -1 : r.dtstart > q.dtstart ? 1 : 0;
            }
          });
          // Insert event items. The events are sorted by date, as are the list
          // items. To ensure proper event ordering, walk the lists of events
          // and event items. As the list item date is later than the event
          // date, insert events before the next list item.
          var eventList = $('%MODULE_ID%_events_'+rstart);
          var childNodes = eventList.childNodes;
          var r = 0;
          var c = 0;
          while (c < childNodes.length && r < results.length) {
            var dtstart = childNodes[c].getAttribute('title');
            while (results[r].dtstart < dtstart) {
              %MODULE_ID%_insertEvent(eventList, results[r], childNodes[c], name);
              r++;
            }
            c++;
          }
          while (r < results.length) {
            %MODULE_ID%_insertEvent(eventList, results[r], null, name);
            r++;
          }
          d.setTime(d.getTime() + %MODULE_ID%_ONE_DAY);
          m.setTime(m.getTime() + %MODULE_ID%_ONE_DAY);
        }
      }

      function %MODULE_ID%_insertEvent(eventList, result, refChild, name)
      {
        var s = new DOMStack();
        s.push(document.createElement('li'));
        s.setAttribute('title', result.dtstart);
        s.setAttribute('style', 'list-style: url(%MODULE_CONTEXT%images/cal.png)');
        s.setClassName('vevent');
        s.openElement('span');
        s.setClassName('summary');
        if (name) {
          s.appendText("[");
          s.appendText(name);
          s.appendText("] ");
        }
        s.appendText(result.summary);
        s.closeElement('span');
        s.openElement('span');
        var dtstart = Date.parseString(result.dtstart, "yyyyMMddTHHmmssZ");
        if (dtstart == null || dtstart.getTime() % 86400000 == 0) {
          s.appendText(" (All Day)");
        } else {
          dtstart.add('m', - dtstart.getTimezoneOffset());
          s.appendText(dtstart.format(" (h:mm a)"));
        }
        s.closeElement('span');
        var newChild = s.pop();
        eventList.insertBefore(newChild, refChild);
      }

      function %MODULE_ID%_refresh()
      {
        var username = '%MODULE_PREF_VALUE_username%';
        var password = '%MODULE_PREF_VALUE_password%';
        var firstLast = username.match(/(\S+)\s+(.+)/);
        var firstName = firstLast[1];
        var lastName = firstLast[2];

        var query = $H({
              S: lastName,
              G: firstName,
            end: '+P%MODULE_PREF_VALUE_ndays%D' 
        }).toQueryString();
        var url = "/uPortal/proxy/ocal.rdf?"+query;
        %MODULE_ID%_request(username, password, url);

        var events = "%MODULE_PREF_VALUES_events%".split(", ");
        for (var i = 0; i < events.length; i++) {
          if (events[i].match(/^http/)) {
            var parts = events[i].split("|");
            %MODULE_ID%_request(username, password, parts[0], parts[1]);
          }
        }
      }

      function %MODULE_ID%_request(username, password, url, name)
      {
        var request =
          "GET " + url + " HTTP/1.1\n" +
          "Authorization: BASIC " + encode64(username+":"+password) + "\n" +
          "\n\n";

        var r = Ajax.getTransport();
        r.onreadystatechange = function(){%MODULE_ID%_update(r,url,name)};
        r.open('POST', '/portal/proxy/squid', true);
        r.send(request);
      }

      function %MODULE_ID%_onload() {
        if ("%MODULE_PREF_VALUE_username%" != "") {
          %MODULE_ID%_refresh();
        }
      }

      if ("%MODULE_PREF_VALUE_username%" == "" ) {
        %MODULE_ID%_usage();
      } else {
        %MODULE_ID%_calendar();
      }

    </script>

    ]]>
  </content>
</module>
